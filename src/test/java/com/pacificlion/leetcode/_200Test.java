package com.pacificlion.leetcode;

import static org.junit.Assert.*;

import org.junit.BeforeClass;
import org.junit.Test;

public class _200Test {
	
	private static _200.Solution1 solution1;
	private static _200.Solution2 solution2;

	private char[][] input1 = { { '1', '1', '1', '1', '0' }, { '1', '1', '0', '1', '0' }, { '1', '1', '0', '0', '0' },
			{ '0', '0', '0', '0', '0' } };
	private char[][] input2 = {
			{ '1', '0', '1', '1', '0', '0', '1', '0', '1', '1', '1', '1', '0', '1', '0', '1', '1', '1', '1', '0' },
			{ '0', '1', '0', '0', '1', '0', '1', '0', '1', '1', '1', '1', '1', '1', '0', '1', '1', '0', '1', '1' },
			{ '1', '0', '0', '1', '0', '1', '0', '1', '0', '1', '1', '0', '1', '1', '1', '0', '0', '1', '1', '0' },
			{ '0', '1', '1', '0', '0', '1', '1', '0', '1', '1', '1', '1', '0', '0', '1', '0', '0', '0', '1', '1' },
			{ '1', '1', '0', '1', '0', '0', '1', '0', '0', '0', '1', '0', '1', '0', '1', '1', '1', '0', '1', '1' },
			{ '0', '0', '0', '0', '1', '0', '1', '1', '0', '0', '1', '0', '0', '1', '0', '1', '1', '1', '1', '0' },
			{ '1', '0', '1', '1', '1', '1', '0', '1', '1', '0', '1', '1', '0', '1', '1', '1', '0', '0', '1', '0' },
			{ '0', '1', '1', '0', '0', '0', '1', '0', '0', '1', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1' },
			{ '0', '0', '0', '0', '1', '1', '0', '1', '0', '0', '1', '1', '0', '1', '0', '0', '1', '0', '1', '0' },
			{ '0', '0', '1', '1', '1', '0', '1', '0', '1', '0', '1', '1', '1', '0', '1', '1', '1', '1', '1', '0' },
			{ '1', '0', '1', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '1', '1' },
			{ '0', '0', '1', '1', '1', '1', '0', '1', '1', '1', '0', '1', '0', '0', '0', '1', '1', '1', '0', '1' },
			{ '1', '1', '1', '0', '0', '0', '0', '0', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1', '1', '0' },
			{ '0', '0', '1', '1', '1', '0', '0', '1', '0', '0', '1', '1', '1', '1', '1', '1', '0', '1', '1', '0' },
			{ '0', '0', '0', '1', '1', '0', '0', '0', '0', '1', '1', '0', '1', '0', '0', '1', '1', '1', '1', '1' },
			{ '0', '1', '1', '1', '0', '1', '0', '0', '1', '1', '1', '1', '1', '0', '1', '1', '1', '0', '0', '1' },
			{ '0', '0', '0', '0', '1', '1', '1', '1', '0', '0', '0', '0', '1', '0', '0', '0', '0', '1', '1', '0' },
			{ '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '0', '1', '1', '1', '1', '1', '1' },
			{ '0', '1', '0', '0', '1', '0', '0', '1', '1', '1', '1', '1', '1', '0', '1', '0', '1', '1', '1', '1' },
			{ '0', '0', '1', '1', '1', '1', '1', '0', '0', '0', '1', '1', '1', '1', '1', '1', '0', '1', '1', '0' } };

	private char[][] input3 = { { '1', '1', '1', '1', '1', '1', '1' }, { '0', '0', '0', '0', '0', '0', '1' },
			{ '1', '1', '1', '1', '1', '0', '1' }, { '1', '0', '0', '0', '1', '0', '1' },
			{ '1', '0', '1', '0', '1', '0', '1' }, { '1', '0', '1', '1', '1', '0', '1' },
			{ '1', '1', '1', '1', '1', '1', '1' } };
	private int expected1 = 1;
	private int expected2 = 23;
	private int expected3=1;
	
	 @BeforeClass
	    public static void setup() {
	        solution1 = new _200.Solution1();
	        solution2 = new _200.Solution2();
	    }

	@Test
	public void testInPlaceApproach() {
		assertEquals(expected1, solution1.numIslands(input1));
		assertEquals(expected3, solution1.numIslands(input3));
		assertEquals(expected2, solution1.numIslands(input2));
	}

	@Test
	public void testVisitedArray() {
		assertEquals(expected1, solution2.numIslands(input1));
		assertEquals(expected3, solution2.numIslands(input3));
		assertEquals(expected2, solution2.numIslands(input2));
	}
}
